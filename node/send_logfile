#!/bin/bash

# 환경 설정
FAIL2BAN_LOG_PATH=/var/log/fail2ban.log
PATTERN='\] (Found|Ban) [0-9]*\.[0-9]*\.[0-9]*\.[0-9]*'

# .env 파일 로드
# NODE_NAME, RECEIVER_IP, RECEIVER_USERNAME, RECEIVER_PW, RECEIVER_PATH, RECEIVER_PORT
if [[ -f .env ]]; then
    while read -r line; do
	export $( eval echo "$line" )
    done <".env"
else
    echo "No .env file found"
    exit 1
fi

# RECEIVER_PORT가 없을 시 22로 지정
if [[ -z "$RECEIVER_PORT" ]]; then
    RECEIVER_PORT=22
fi

# 마지막 로그 기록 시각, 현재 시각
LATEST_LOG_TS=$(ls -1 ./logfiles | sort -n | tail -n 1)
if [[ -z "$LATEST_LOG_TS" ]]; then
    LATEST_LOG_TS=0
fi
CURRENT_TS=$(date +%s)

if [[ ! -d "logfiles" ]]; then
    mkdir logfiles
fi    

# fail2ban 로그에서 탐지된 IP를 찾고
# 시간, 필터, IP주소, 차단/탐지 여부를 추출한다
grep -E "$PATTERN" "$FAIL2BAN_LOG_PATH" | tac | while read line;
do
    time=$(echo "$line" | awk '{gsub(/,.*$/, "", $2); print $1, $2}')
    filter=`echo "$line" | awk '{print $6}'`
    action=`echo "$line" | awk '{print $7}'`
    ip_addr=`echo "$line" | awk '{print $8}'`

    # 로그 시각이 최신 로그 시각보다 이전이면 무시
    time_ts=`date -d "$time" +%s`
    diff_ts=$((time_ts - LATEST_LOG_TS))

    if [[ $diff_ts -le 0 ]]; then
        break
    fi
    
    echo "$time $filter $ip_addr $action" >> ./logfiles/tmp
done


# 로그파일이 시간 기준 역순으로 정렬되어 있으므로 재정렬 후 전송
# 전송할 것 없으면 종료
if [[ ! -e ./logfiles/tmp ]]; then
    echo "No new log to send"
    exit 0
fi
cat ./logfiles/tmp | tac > ./logfiles/$CURRENT_TS
rm ./logfiles/tmp
sshpass -p $RECEIVER_PW scp -P $RECEIVER_PORT ./logfiles/$CURRENT_TS $RECEIVER_USERNAME@$RECEIVER_IP:$RECEIVER_PATH
